version: "3.9"

services:
  app:
    build:
      context: .
      target: test
      dockerfile: Dockerfile
    environment:
      - PORT=3000
      - MONGODB_HOST=mongo
      - MONGODB_PORT=27017
      - MONGODB_USER=root
      - MONGODB_PASS=pass
      - DB_SAGA_NAME=Saga
      - DB_SAGA_COLLECTION_NAME=saga
      - MONGODB_PASS=pass
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
      - RABBIT_USER=root
      - RABBIT_PASSWORD=pass
      - SENTRY_DSN=sample_dsn
      - SENTRY_ENV=local
    volumes:
      - ./coverage:/project/coverage
    depends_on:
      mongo:
        condition: service_healthy
      rabbitmq: 
        condition: service_healthy
  mongo:
    image: "mongo:6.0.8"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=pass
    healthcheck:
      test: echo 'db.stats().ok' | mongosh localhost:27017/test --quiet
      interval: 60s
      timeout: 10s
      retries: 2
      start_period: 40s
  rabbitmq:
    image: "rabbitmq:3-management-alpine"
    environment:
      - RABBITMQ_DEFAULT_USER=root
      - RABBITMQ_DEFAULT_PASS=pass
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 2
      start_period: 40s